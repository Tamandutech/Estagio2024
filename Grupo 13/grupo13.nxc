//==============================================================================
//===| TAMANDUTECH EQUIPE DE ROB�TICA  |========================================
//===|          EST�GIO 2024           |========================================
//===|           EQUIPE 13             |========================================
//==============================================================================

/* Este c�digo funciona de maneira que o rob� possa se movimentar atrav�s dos motores A e C
Gire no pr�prio eixo para a esquerda com 50% da pot�ncia at� que identifique um advers�rio a menos de 35cm.
Uma vez identificado, o rob� andar� para frente em velocidade m�xima at� que a luta acabe ou ele perca o advers�rio de vista.

O intuito do desafio � adaptar o c�digo ao rob� de voc�s, adicionar movimenta��o inicial na fun��o pr� definida e realizar ajustes
na velocidade dos motores conforme forem necess�rios

Os comandos b�sicos s�o:

OnFwd(MOTOR, POTENCIA (0 a 100));
delay(milisegundos);

La�os s�o os comuns de C, while, for, do while, until.

Condicionais if, else if, else, switch case.

Para outras fun��es, tasks, structures ou condicionamentos especiais, procurar ajuda na staff do est�gio */

//__________N�O MEXER SEM APOIO DA STAFF_______________________________________
#define motorDireita OUT_C
#define motorEsquerda OUT_A
#define distancia_sensor SensorUS(IN_4)
#define infravermelho_sensor Sensor(IN_1)

void movimentoInicial();

//__________MEXER PARA REGULAR A DISTANCIA DE BUSCA____________________________________
#define distancia_busca 35      // Limiar para o rob� come�ar a andar para frente, em cent�metros
#define limite_arena 50         // Limiar para o rob� reconhecer a borda da arena

//==============================================================================
//=========================CORPO DO C�DIGO======================================
//==============================================================================

task main(){
    SetSensorLowspeed(IN_4);            // N�O MEXER SUJEITO � >>>PROBLEMAS<<<
//    SetSensorLight(IN_1);
    Wait(5000);                         // Tempo de espera previsto nas regras

    //arma();                           // Apagar o "//" caso seu rob� tenha motor para arma/desarme
    movimentoInicial();              // Apagar o "//" para que seu rob� execute a estrat�gia inicial

    while(true){                                     //Rodar para sempre
//        if(infravermelho_sensor < limite_arena){     // Se o infravermelho enxergar o limite da arena
//           // Ande em r� e vire
//           OnFwd(motorDireita,-100);
//           OnFwd(motorEsquerda,-100);
//           Wait(1000);
//           OnFwd(motorDireita,-100);
//           OnFwd(motorEsquerda,100);
//           Wait(1000);
//        }
        if(distancia_sensor < distancia_busca){  // Se o sensor est� vendo menos do que o definido como limiar, v� para frente
           OnFwd(motorDireita,100);              // Se o seu rob� for para tr�s, apenas inverter o sinal para "-100";
           OnFwd(motorEsquerda,100);             // Se o seu rob� for para tr�s, apenas inverter o sinal para "-100";
        }
        else{                                    // Caso n�o localize um objeto, girar para um lado (nesse caso, Esquerda)
           OnFwd(motorDireita,75);               // Se o seu rob� for para tr�s, inverta o sinal da pot�ncia
           OnFwd(motorEsquerda,-75);             // Diminua ou aumente a pot�ncia para curvas mais r�pidas ou devagar.
        }
    }
}

void movimentoInicial()
{
   OnFwd(motorDireita,100);
   OnFwd(motorEsquerda,100);
   Wait(250);
   OnFwd(motorDireita,-100);
   OnFwd(motorEsquerda,-100);
   Wait(250);
}

